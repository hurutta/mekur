#!/bin/bash



##############################################################
############## rong ebong tader color code ###################
normal='\033[0m'
red='\033[0;31m'
green='\033[0;32m'
orange='\033[0;33m'
blue='\033[0;34m'
purple='\033[0;35m'
cyan='\033[0;36m'
gray='\033[0;37m'
yellow='\033[1;33m'
white='\033[1;37m'

reset=$(tput sgr 0)
black_f=$(tput setaf 16)
red_f=$(tput setaf 1)
green_f=$(tput setaf 2)
yellow_f=$(tput setaf 3)
green_f=$(tput setaf 82)
white_f=$(tput setaf 15)
#mgnt_f=$(tput setaf 15)

black_b=$(tput setab 16)
red_b=$(tput setab 1)
blue_b=$(tput setab 18)
yellow_b=$(tput setab 3)
green_b=$(tput setab 82)
white_b=$(tput setab 15)
mgnt_b=$(tput setab 150)

bold=$(tput bold)
normal=$(tput sgr0)
#############################################################
#echo "${white_b}Red text ${red_f}and white background${rst}â–ˆ"
aa=${white_b}${black_f}
bb=${reset}
cc=${green_b}${black_f}
#############################################################
loading () 
{
	i=$1
	for (( k=1; k<=$1; k++ ))
	do
		for (( c=1; c<=80; c++ ))
		do  
	   		printf "|"; sleep 0.0001;
		done 
		printf "\r";
		
	 	for (( c=1; c<=80; c++ ))
		do  
	   		printf "/"; sleep 0.0001;
		done
		printf "\r";
		for (( c=1; c<=80; c++ ))
		do  
	   		printf "-"; sleep 0.0001;
		done 
		printf "\r";
		for (( c=1; c<=80; c++ ))
		do  
	   		printf "\\"; sleep 0.0001;
		done 
	  	printf "\r";
		#i=$(( $i + 1 ))
	done
	
	printf "\r\r"; 
	
}
######################## intro ##############################
name=`whoami`
#printf "\t\t\t${red_b}${blue_b}${bold} A BRIEF INFO of ${red_b}${bold}$name${blue_b}'s PC ${reset}" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols)

echo "\n\n"

for (( i=0;i<=5;i++))
	do
	echo -en "\033[1A"
	echo -en "                                                            \n";                                                                         
	sleep 0.10s;
	
	
	echo -en "\033[1A"
	
	printf "\t\t\t${red_b}${blue_b}${bold} A BRIEF INFO of ${red_b}${bold}$name${blue_b}'s PC ${reset}" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols)
	echo -en "\n"
	sleep 0.10s;
done




#############################################
#printf "\n"
time=$(LANG=en_us_88591; date | awk '{print $4}')
date=$(LANG=en_us_88591; date | awk '{print $3}')
month=$(LANG=en_us_88591; date | awk '{print $2}')
bar=$(LANG=en_us_88591; date | awk '{print $1}')
year=$(LANG=en_us_88591; date | awk '{print $6}')
btry=`upower -i $(upower -e | grep '/battery') | grep --color=never -E percentage|xargs|cut -d' ' -f2|sed s/%//`
uptime=`uptime | awk -F'( |,|:)+' '{print $6,$7",",$8,"hours,",$9,"minutes"}'`


printf "TIME : $aa$time$bb\t"
printf "DAY : $aa$bar $date$bb\t"
printf "M&Y : $aa$month $year$bb\t"
printf "BATTERY : $aa$btry%%$bb"
printf "\n\n"
#############################################################



ram=$(grep MemTotal /proc/meminfo | awk '{print $2}')
ramGb=$(expr $ram / 1000000)
freeram=$(grep MemAvailable /proc/meminfo | awk '{print $2}')
freeram=$(expr $freeram / 1000)

cpu=`grep -c 'model name' /proc/cpuinfo`
processor=`lscpu | sed -nr ':a;s/  / /;ta; /Model name/ s/.*: (.*) @ .*/\1/p'`
mhz=`lscpu | grep 'CPU max MHz' | cut -f 2 -d ":" | awk '{$1=$1}1'`
archi=`lscpu | grep 'Architecture' | cut -f 2 -d ":" | awk '{$1=$1}1'`
catche=`lscpu | grep 'L3 cache' | cut -f 2 -d ":" | awk '{$1=$1}1'`

python=`python3 --version | sed 's/[^0-9.]*//g'`
gcc=`g++ -dumpversion`
g=`g++ -dumpversion`
#firefox=`firefox --version | sed 's/[^0-9.]*//g'`
os=`lsb_release -d 2>/dev/null | awk '{print $2 $3 $4}'`
kernel=`uname -r`
dvcName=`cat /sys/devices/virtual/dmi/id/product_name`
bios=`cat /sys/devices/virtual/dmi/id/bios_version`
env=`echo $XDG_CURRENT_DESKTOP`
wifi=`iwgetid -r`
sig=$(iwconfig 2>/dev/null | grep -n 'Quality' | cut -f 2 -d "=" | awk '{print $1}') 
display=`xdpyinfo 2>/dev/null | grep dimensions | sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/'`
birth=`ls -lact --full-time /etc | tail -1 | awk '{print $6,$7}'`

printf "$cc DEVICE: $bb $dvcName\t\t";						printf "$cc WIFI  : $bb $wifi\n";
printf "$cc KERNEL: $bb $kernel \t\t";						printf "$cc QUALTY: $bb $sig\n";
printf "$cc OS    : $bb $os \t\t";							printf "$cc CORES : $bb $cpu\n";
printf "$cc RAM   : $bb $ramGb GB\t\t\t\t";					printf "$cc PROC. : $bb $processor\n";
printf "$cc FREE  : $bb $freeram MB\t\t\t";					printf "$cc SPEED : $bb $mhz MHz\n";
printf "$cc PYTHON: $bb $python \t\t\t";					printf "$cc ARCHI : $bb $archi\n";
printf "$cc BIOS  : $bb $bios \t\t";						printf "$cc CATCHE: $bb $catche\n";
printf "$cc DSPLAY: $bb $display \t\t\t";					printf "$cc ENVMNT: $bb $env\n";
printf "$cc DSPLAY: $bb $display \t\t\t";					printf "$cc UPTIME: $bb $uptime\n";
printf "$cc DSPLAY: $bb $display \t\t\t";					printf "$cc BIRTH : $bb $birth\n";

#echo "${cc}this is ${bold}bold${normal} but this isn't"




printf "$sig\n"

































#printf "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
